{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://cssplice.github.io/peml/schemas/peml.json",
  "title": "PEML",
  "description": "This schema defines the data model for PEML, the Program Exercise Markup Language (https://cssplice.github.io/peml/). The data model is intended to be represented in PEML notation, but the same data model can easily be expressed in JSON or YAML or any similar structured data format, so this serves as a JSON Schema for the common data model behind the content.",

  "definitions": {
    "nonempty_string": {
      "type": "string",
      "minLength": 1
    }
    "id": {
      "$ref": "#/definitions/nonempty_string"
    },
    "timestamp": {
      "description": "A human-readable timestamp indicating the time at which this version of the exercise was last modified. For lack of a better option, at the moment this should be an RFC 3339/ISO 8601 UTC timestamp (if you know of something more user-friendly but equally unambiguous, let us know!). That format is: YYYY-MM-DDThh:mm:ss.nnnÂ±hh:mm. See https://stackoverflow.com/questions/28020805/regex-validate-correct-iso8601-date-string-with-time for the regex info.",
      "$ref": "#/definitions/nonempty_string",
      "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$",
    },
    "email_address": { "type": "string" },
    "email_address_list": {
      "description": "Can be either a single e-mail address, or an array of addresses.",
      "oneOf": [
        { "$ref": "#/definitions/email_address" },
        {
          "type": "array",
          "items": { "$ref": "#/definitions/email_address" },
          "minItems": 1
        }
      ]
    },
    "tag_list": {
      "description": "Can be either a single string representing a list of comma-delimited tags/elements, or an array of strings representing the same content.",
      "oneOf": [
        { "type": "string" },
        {
          "type": "array",
          "items": { "type": "string" }
        }
      ]
    },
    "version_descriptor": {
      "type": "object",
      "required": ["timestamp"],
      "properties": {
        "id": { "$ref": "#/definitions/nonempty_string" },
        "timestamp": { "$ref": "#/definitions/nonempty_string" },
        "repository":
      }
    },
    "location": {},
    "string_or_location": {
      "description": "Either a location or a plain string",
      "oneOf": [
        { "$ref": "#/definitions/email_address" },
        { "type": "string" }
      ]
    },
    "file": {},
    "directory": {},
    "fileset": {},
    "test_suite": {},
    "test_case": {},
    "environment": {},
  },

  "type": "object",

  "required": ["exercise_id", "title", "instructions", "version"],

  "properties": {
    "exercise_id": { "$ref": "#/definitions/id" },
    "title": { "type": "string" },
    "instructions": { "type": "string" },
    "author": { "$ref": "#/definitions/email_address_list" },
    "authors": {
      "description": "Synonym for 'author'.",
      "$ref": "#/definitions/email_address_list"
    },
    "version" : { "$ref": "#/definitions/version_descriptor" },
  }
}
